package cn.xu.myCollection;
/**
 * 测试链表
 * 特点：查询效率低，增删效率高，线程不安全
 * 每一个Node都包含：上一个节点的指针，本节点的数据，下一个节点的指针
 * 
 * 该封装封装
 * 增加泛型
 * @author shen
 *
 */
public class XuLinkedList05 {
	
	private Node first;
	private Node last;
	private int size;
	
	//[]
	//[a,b,c,d,e,f]         2  
	public Object get(int index) {
		
		if(index<0|index>size-1) {
			throw new RuntimeException("索引数字不合法："+index);
		}
		Node temp=getNode(index);	
		
		return temp!=null?temp.element:null;	
	}
	
	private void checkRange(int index) {
		if(index<0|index>size-1) {
			throw new RuntimeException("索引数字不合法："+index);
		}
	}
	
	
	public Node getNode(int index) {
		checkRange(index);
		Node temp=first;	
		//提升寻找效率
		if(index<(size>>1)) {
			for(int i=0;i<index;i++) {
			temp=temp.next;
			}
		}else {
			temp=last;
			for(int i=size-1;i>index;i--) {
				temp=temp.previous;
			}
		}
		return temp;
	}
	
	
	//[a,b,c,d,e,f]
	public void add(int index,Object obj) {
		Node down=getNode(index);
		Node up=down.previous;
		Node temp=new Node(obj);
		if(up!=null) {
			up.next=temp;
			temp.previous=up;
		}
		if(down!=null) {
			temp.next=down;
			down.previous=temp;
		}
		if(index==0) {
			first=temp;
		}
		size++;
		
	}
	
	
	
	
	public void remove(int index) {
		Node temp=getNode(index);
		if(temp!=null) {
			Node up=temp.previous;
			Node down=temp.next;
			if(up!=null) {
				up.next=down;		
			}
			if(down!=null) {
				down.previous=up;
			}
			if(index==0) {//被删除元素是第一个时
				first=down;
			}
			if(index == size-1) {//被删除元素时最后一个时
				last=up;
			}
			size--;
		}
		
	}
	

	public int size() {
		return size;
	}
	
	//[]
	//[a,b]
	//[a,b,c]
	public void add(Object obj) {
		Node node=new Node(obj);
		if(first==null) {
			first=node;
			last=node;
		}else {
			
			node.previous=last;
			node.next=null;
			
			last.next=node;
			last=node;	
		}
		size++;
	}
	public String toString() {
		//[a,b,c]  first=a; last=c
		
		StringBuilder sb=new StringBuilder();
		sb.append('[');
		
		Node temp=first;
		while(temp!=null) {
			sb.append(temp.element+",");
//			System.out.println(temp.element);
			temp=temp.next;
		}
		sb.setCharAt(sb.length()-1, ']');
		return sb.toString();
		
	}
	
	public static void main(String[] args) {
		XuLinkedList05 list=new XuLinkedList05();
		list.add("a");
		list.add("b");
		list.add("c");
		list.add("d");
		list.add("e");
		list.add("f");
		System.out.println(list);
		System.out.println(list.size());
		System.out.println(list.get(1));
		list.remove(0);
		System.out.println(list);
		list.remove(4);
		System.out.println(list);
		list.remove(0);
		System.out.println(list);
		
		
		list.add(0, "徐圳");
		System.out.println(list);
		list.add(3, "f");
		System.out.println(list);
		list.add("g");
		System.out.println(list);
		
	}
	
	
	
	
}
